public class AllocationReceiptAndDemand implements Database.Batchable<sObject>,Database.Stateful{
    public List<Booking__c> bookingList = new List<Booking__c>();
    
    Public String csvHeader = 'Booking,Receipt,SplitAmount,ReceiptId,DemandName,DemandId,DemandMilestoneName,DemandRemark,ReceiptRemark,ReceiptDescription\n';
    Public String csvBody_All ='Booking,Receipt,SplitAmount,ReceiptId,DemandName,,DemandId,DemandMilestoneName,DemandRemark,ReceiptRemark,ReceiptDescription\n';
    public Database.QueryLocator start(Database.BatchableContext BC) {
        String bookingQuery = ' SELECT Id FROM Booking__c WHERE Name > '+System.Label.BookingNameTemp+' ORDER BY Name ASC LIMIT 15000 ';
        return Database.getQueryLocator(bookingQuery);
    }
    
    public void execute(Database.BatchableContext BC, List<Booking__c> bookingList) {
        set<String> bookingIdsSet = new set<String>();
        for(Booking__c bk : bookingList){
            bookingIdsSet.add(bk.Id);
        }
        
        List<Receipt__c> receipt_DLD_List_Temp = [ SELECT Id,Name,Other_Charges_Type__c,Amount_Rs__c,GL_Date__c,Mode__c,Description__c,Receipt_Date__c,Demand__c,Total_Amount__c,LP_Waiver__c,Booking__c,Booking__r.Name,
                                        LP_Waiver__r.Demand__c,LP_Waiver__r.Demand__r.Milestone_Name__c,LP_Waiver__r.Demand__r.Other_Charges_Type__c,Booking__r.Agreement_Value__c,Booking__r.Booking_Date__c,Booking__r.Unit__r.Configuration__c,
                                        Registration_Collection_Control_Report__c,CreatedDate,Towards_Other_Charges_Amount__c,RemarksText__c,Credit_Card_Charges__c FROM Receipt__c WHERE Receipt_Status__c = 'Cleared' AND 
                                        Is_Reversed_Receipt__c = false AND Registration_Collection_Control_Report__c  > 0 AND Booking__c IN :bookingIdsSet ORDER BY GL_Date__c ASC ];

        List<Demand__c> demandList = [SELECT ID, Due_Date__c,Total_Amount_Demanded__c,Debit_Demanded__c,Other_Charges_Type__c,Booking__c,Milestone_Name__c,Name,GL_Date__c,Debit_Type__c,Remarks__c,Total_Amount_with_Tax_Demanded__c
                                       FROM Demand__c WHERE Demand_Status__c != 'Reversed' AND Payment_Milestones__c = null AND Booking__c IN :bookingIdsSet ORDER BY GL_Date__c ASC ]; 
        
        Map<String,List<Demand__c>> mapDemandList = new Map<String,List<Demand__c>>();
        Map<String,List<Receipt__c>> mapDLD_RECEIPT_List = new Map<String,List<Receipt__c>>();
        
        for(demand__c dmnd : demandList){
            dmnd.OutStanding_days_calculated__c = '';
            dmnd.Balance_Amount__c = 0;
            System.debug('Milestone_Name__c -> '+dmnd.Milestone_Name__c);
            System.debug('Milestone_Name__c -> '+dmnd.Milestone_Name__c);
            if( (dmnd.Debit_Type__c != null  && dmnd.Debit_Type__c == 'DLD Charges') || (dmnd.Milestone_Name__c != null && ((dmnd.Milestone_Name__c.contains('DLD') || dmnd.Milestone_Name__c.contains('regisration') || dmnd.Milestone_Name__c.contains('Pre-regisration') ) && 
            ((! dmnd.Milestone_Name__c.contains('Title Deed Fees (Units)')) && (! dmnd.Milestone_Name__c.contains('Title Deed Fees (Villas)')) && (! dmnd.Milestone_Name__c.contains('Pre-registration To Pre-title Deed')) 
            
            && (! dmnd.Milestone_Name__c.contains('Pre-registration to pre-title deed (completed projects)')) && (! dmnd.Milestone_Name__c.contains('Resale NOC (Title Deed)'))))) || 
            
            (dmnd.Remarks__c != null && ((dmnd.Remarks__c.contains('DLD') || dmnd.Remarks__c.contains('regisration') || dmnd.Remarks__c.contains('Pre-regisration') ) && 
            
            ((! dmnd.Remarks__c.contains('Title Deed Fees (Units)')) && (! dmnd.Remarks__c.contains('Title Deed Fees (Villas)')) && (! dmnd.Remarks__c.contains('Pre-registration To Pre-title Deed')) 
            
            && (! dmnd.Remarks__c.contains('Pre-registration to pre-title deed (completed projects)')) && (! dmnd.Remarks__c.contains('Resale NOC (Title Deed)')))))){
                if(mapDemandList.get(dmnd.Booking__c) != null){
                    mapDemandList.get(dmnd.Booking__c).add(dmnd);
                }else{
                    mapDemandList.put(dmnd.Booking__c, new List<Demand__c>{dmnd});
                }
            }
        }
        
        for(Receipt__c receipt : receipt_DLD_List_Temp){
            if(receipt.Other_Charges_Type__c == null || (receipt.Other_Charges_Type__c != '' && receipt.Other_Charges_Type__c != 'Pre-registration To Pre-title Deed' && receipt.Other_Charges_Type__c != 'Pre-registration to pre-title deed (completed projects)' && receipt.Other_Charges_Type__c != 'Resale NOC (Title Deed)' 
                && receipt.Other_Charges_Type__c != 'Title Deed Charges' && receipt.Other_Charges_Type__c != 'Title Deed Fees (Units)' && receipt.Other_Charges_Type__c != 'Title Deed Fees (Villas)')){
                    if(mapDLD_RECEIPT_List.get(receipt.Booking__c) != null){
                        mapDLD_RECEIPT_List.get(receipt.Booking__c).add(receipt);
                    }else{
                        mapDLD_RECEIPT_List.put(receipt.Booking__c, new List<Receipt__c>{receipt});
                    }
                }
        }
        
        String csvBody;
        String loggedReceiptinEXcel;
        for (String bookingId : mapDLD_RECEIPT_List.keySet()) {
            for (Receipt__c receipt : mapDLD_RECEIPT_List.get(bookingId)) {
                Integer no_of_demand = mapDemandList.get(bookingId) != null ? mapDemandList.get(bookingId).size() : 0;
                if(no_of_demand >= 1){
                    for(Demand__c dmnd : mapDemandList.get(receipt.Booking__c)){
                        dmnd.Balance_Amount__c = dmnd.Total_Amount_with_Tax_Demanded__c;
                        Decimal calculation = receipt.Registration_Collection_Control_Report__c - dmnd.Balance_Amount__c;
                        if(calculation >= 0 && no_of_demand > 1){
                            dmnd.OutStanding_days_calculated__c = 'Paid';
                            csvBody += '"' + receipt.Booking__r.Name + '","' + receipt.Name + '","' + dmnd.Balance_Amount__c + '","' + receipt.Id + '","' + dmnd.Name + '","' + dmnd.Id + '","' + dmnd.Milestone_Name__c + '","' + dmnd.Remarks__c + '","' + receipt.RemarksText__c + '","' + receipt.Description__c +  '"\n';
                            receipt.Registration_Collection_Control_Report__c = receipt.Registration_Collection_Control_Report__c - dmnd.Balance_Amount__c;
                            no_of_demand -= 1;
                            mapDemandList.remove(dmnd.Id);
                        }else if(calculation >= 0 && no_of_demand == 1) {
                            csvBody += '"' + receipt.Booking__r.Name + '","' + receipt.Name + '","' + receipt.Registration_Collection_Control_Report__c + '","' + receipt.Id + '","' + dmnd.Name + '","' + dmnd.Id + '","' + dmnd.Milestone_Name__c + '","' + dmnd.Remarks__c + '","' + receipt.RemarksText__c + '","' + receipt.Description__c +  '"\n';
                            no_of_demand -= 1;
                            mapDemandList.remove(dmnd.Id);
                        }else{
                            dmnd.Balance_Amount__c = dmnd.Balance_Amount__c - receipt.Registration_Collection_Control_Report__c;
                            csvBody += '"' + receipt.Booking__r.Name + '","' + receipt.Name + '","' + receipt.Registration_Collection_Control_Report__c + '","' + receipt.Id + '","' + dmnd.Name + '","' + dmnd.Id + '","' + dmnd.Milestone_Name__c + '","' + dmnd.Remarks__c + '","' + receipt.RemarksText__c + '","' + receipt.Description__c +  '"\n';
                            break;
                        }
                    }
                }else{
                    csvBody += '"' + receipt.Booking__r.Name + '","' + receipt.Name + '","' + receipt.Registration_Collection_Control_Report__c + '","' + receipt.Id + '","No Demand","No Demand","No Demand","No Demand","' + receipt.RemarksText__c + '","' + receipt.Description__c +  '"\n';
                }
            }
        }
        
        csvBody_All = csvBody_All + csvBody;
    }
    
    public void finish(Database.BatchableContext BC) {
        // Create a new document
        Document doc = new Document();
        doc.Name = 'ReceiptAllocation.csv';
        doc.FolderId = UserInfo.getUserId(); // Save to the user's personal folder
        doc.Body = Blob.valueOf(csvBody_All);
        doc.ContentType = 'text/csv';
        doc.Type = 'csv';
        doc.IsPublic = true;
        
        // Insert the document
        insert doc;
    }
    
    public static void dummyCodeCov(){
        Integer i =0;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
    }

}