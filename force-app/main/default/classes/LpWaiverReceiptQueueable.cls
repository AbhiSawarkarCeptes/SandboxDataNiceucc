global class LpWaiverReceiptQueueable implements Queueable, Database.AllowsCallouts{
    global List<String> waiverId = new List<String>();
    global LpWaiverReceiptQueueable(List<String> waiverIdData){
        waiverId = waiverIdData;
    }
        global void execute(QueueableContext context) { 
            
            //EmailTemplate e = [select id, HtmlValue, subject from EmailTemplate where DeveloperName =: 'LP_Waiver_Notification'];
            List<LP_Waiver__c> lpList = [select id,Booking__r.Unit__r.Name,receipt__r.Receipt_Number__c,Receipt__c,Receipt__r.Name
                               ,Booking__r.Total_On_Account_Money_With_Registration__c,Amount_Towards_Late_Penalty__c,Booking__r.Tower__c, 
                               LP_Amount_To_Be_Waived__c, CreatedDate, CreatedBy.Name, CreatedBy.Email from LP_Waiver__c where id =: waiverId];
            
            List<Messaging.SingleEmailMessage> emailsList = new  List<Messaging.SingleEmailMessage>();
            for(LP_Waiver__c lp : lpList){
            string body = 'Dear ' +lp.CreatedBy.Name+', <br/><br/>'+'Credit note '+ lp.receipt__r.Receipt_Number__c +' has been generated.<br/><br/>'+                
                'Thanks<br/>';
            
            string subject = 'Auto credit note generated by Late Payment Waiver' ;
            Messaging.SingleEmailMessage mail = new Messaging.SingleEmailMessage(); 
            mail.setSubject(subject); 
            mail.setHtmlBody(body);
            list<string> toAddress = new list<string>{lp.CreatedBy.Email};
                mail.setToAddresses(toAddress);
            mail.setSaveAsActivity(false); 
            emailsList.add(mail);
            }
             Messaging.sendEmail(emailsList);
        }
}