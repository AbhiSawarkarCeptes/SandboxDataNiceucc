public with sharing class DemandView {
    public Id previewId {
        set;
        get;
    }
    public Id forMilestone {
        set;
        get;
    }
    public Opportunity Customer {
        get;
        set;
    }
    public String letterHead {
        get;
        set;
    }
    public Boolean letterH {
        get;
        set;
    }
    public String mode {
        get;
        set;
    }
    public String invoiceNumber {
        set;
        get;
    }
    public String invoiceDueDate {
        set;
        get;
    }
    public String invoiceDate {
        set;
        get;
    }
    public Booking__c Booking {
        get;
        set;
    }
    public Decimal CV {
        get;
        set;
    }
    public Decimal TaxOnCV {
        get;
        set;
    }
    public String CVStr {
        get;
        set;
    }
    public String TaxOnCVStr {
        get;
        set;
    }
    public String CVDemandedStr {
        get;
        set;
    }
    public String CVPaidStr {
        get;
        set;
    }
    public String CVBalanceStr {
        get;
        set;
    }
    public List < DemandManagementServices.DemandWrapper > dwList {
        get;
        set;
    }

    public Decimal sgstGT {
        get;
        set;
    }
    public Decimal cgstGT {
        get;
        set;
    }
    public Decimal TDSGT {
        get;
        set;
    }
    public Decimal AmountGT {
        get;
        set;
    }

    public String sgstGTStr {
        get;
        set;
    }
    public String cgstGTStr {
        get;
        set;
    }
    public String TDSGTStr {
        get;
        set;
    }
    public String AmountGTStr {
        get;
        set;
    }

    public Decimal totalTaxDue {
        get;
        set;
    }
    public String totalTaxDueStr {
        get;
        set;
    }
    public Decimal totalInstallmentPayable {
        get;
        set;
    }
    public String totalInstallmentPayableStr {
        get;
        set;
    }
    public Decimal TotalDue {
        get;
        set;
    }
    public String TotalDueStr {
        get;
        set;
    }

    public String CRMName {
        get;
        set;
    }
    public String CRMEmail {
        get;
        set;
    }
    public String CRMMobile {
        get;
        set;
    }

    public String strDemandInvId {
        get;
        set;
    }
    
    public Demand__c demand {
        get;
        set;
    }
    
    public Attachment AT {
        get;
        set;
    }
    public string bookingDate{
        get;
        set;
    }
    public string RMName{get;set;}
    public string RMEmail{get;set;}
    public string RMMobile{get;set;}
    public string RMPhone{get;set;}
    public string leglEntyNameFlatCost{get;set;}
    public string leglEntyNameGST{get;set;}
    public string leglEntyForFlatCost{get;set;}
    public string leglEntyForGST{get;set;}
    public string isTds{get;set;}
    public String CVTaxPaidStr {
        get;
        set;
    }
    public Boolean registPending {
        get;
        set;
    }
    public Legal_Entity__c leObj{
        get;
        set;
    }
    public List < DemandManagementServices.DemandWrapper > dwPreviousDuesList {
        get;
        set;
    }
    Public string totalAmtInWords{get;set;}
    Public string TDSDue{get;set;}
    Public string TDSReceived{get;set;}
    Public string TDSOutstanding{get;set;}
    Public string GSTPercentage{get;set;}
    
    public demandView() {
        letterH = false;
        dwList = new List < DemandManagementServices.DemandWrapper > ();
        sgstGT = 0;
        cgstGT = 0;
        TDSGT = 0;
        AmountGT = 0;
        TotalDue = 0;
        TotalTaxDue = 0;
        totalInstallmentPayable = 0;
        invoiceDueDate = '';
        invoiceNumber = '';
        bookingDate = '';
        RMName = '';
        RMEmail = '';
        RMMobile = '';
        RMPhone = '';
        leglEntyForFlatCost = '';
        leglEntyForGST = '';
        leglEntyNameFlatCost = '';
        leglEntyNameGST = '';
        isTds = 'none';
        registPending = false;
        TDSDue = '';
        TDSReceived = '';
        TDSOutstanding = '';
        dwPreviousDuesList = new List < DemandManagementServices.DemandWrapper > ();
        //totalAmtInWords = '';
        GSTPercentage = '6%';
        
        if (ApexPages.currentPage().getParameters().containsKey('previewId'))
            previewId = (Id) ApexPages.currentPage().getParameters().get('previewId');
        if (ApexPages.currentPage().getParameters().containsKey('forMilestone'))
            forMilestone = (Id) ApexPages.currentPage().getParameters().get('forMilestone');
        if (ApexPages.currentPage().getParameters().containsKey('mode'))
            mode = ApexPages.currentPage().getParameters().get('mode');
        if (ApexPages.currentPage().getParameters().containsKey('invoiceDueDate'))
            invoiceDueDate = ApexPages.currentPage().getParameters().get('invoiceDueDate');
        if (ApexPages.currentPage().getParameters().containsKey('invoiceNumber'))
            invoiceNumber = ApexPages.currentPage().getParameters().get('invoiceNumber');
        if (ApexPages.currentPage().getParameters().containsKey('letterHead')) {
            letterHead = ApexPages.currentPage().getParameters().get('letterHead');
            if (letterHead == '1') {
                letterH = true;
            }
        }

        if (previewid != null) {
            Customer = [Select Id, Unit__c, Unit__r.Name, Unit__r.Tower__r.Name, Unit__r.Tower__r.Cluster__r.Name,
                Unit__r.Project__r.Name, Unit__r.Project__r.Project_Image__c, Unit__r.Configuration__c, Name,Project__c,
                Relationship_Manager__c,Primary_Name__c,Primary_pancard__c,Primary_Phone__c,Primary_Email__c,Permanent_Address__c,
                Mailing_Address__c,Registration_Status__c,unit__r.Tax_Rate_Basic__c,Unit__r.Tower__c
                from Opportunity where Unit__c =: previewId 
                and StageName = 'Booking Confirmed' 
                and S_Active__c = true 
                and Unit__r.Unit_Status__c = 'Sold'
            ];
            
            if(Customer.Registration_Status__c != null && (Customer.Registration_Status__c == 'Registration Pending' || Customer.Registration_Status__c == 'WIP')){
                registPending = true;
            }
            
            leObj = InventoryCostServices.getLegalEntityDetails(Customer.Unit__c,Customer.Project__c,Customer.Unit__r.Tower__c);
            system.debug('legal entity::: '+leObj);
            if(leObj != null){
                    leglEntyNameGST = leObj.Account_Name_Service_Tax__c;
                    
                    leglEntyNameFlatCost = leObj.Account_Name_Flat_Cost__c;
                    
                    leglEntyForFlatCost =  'Account Number : ' + /*leObj.Account_Number_Flat_Cost__c*/ + '\n IFSC Code : ' + leObj.IFSC_Code_Flat_Cost__c +
                                     '\n Bank Name : ' + leObj.Bank_Name_Flat_Cost__c + '\n Address : ' + leObj.RDS_Address1__c;
                    leglEntyForGST =  'Account Number : ' + leObj.Account_Number_Service_tax__c + '\n IFSC Code : ' + leObj.IFSC_Code_Service_Tax__c +
                                     '\n Bank Name : ' + leObj.Bank_Name_Service_tax__c + + '\n Address : ' + leObj.RDS_Address2__c;
            
            }
            
            if(string.isNotBlank(customer.unit__r.Tax_Rate_Basic__c)){
                if(customer.unit__r.Tax_Rate_Basic__c == 'GST 8%'){
                    GSTPercentage = '4%';
                } 
            }
            
            List < User > u = [Select Name, Phone, MobilePhone, Title, Email from User where Id =: Customer.Relationship_Manager__c];
            if (u != null && u.size() == 1) {
                CRMName = u[0].Title + u[0].Name;
                CRMEmail = u[0].Email;
                CRMMobile = u[0].MobilePhone;
            }
            Map < Id, List < DemandManagementServices.DemandWrapper >> customerDemandWrapperMap  = new Map < Id, List < DemandManagementServices.DemandWrapper >>();
            customerDemandWrapperMap = DemandManagementServices.searchSpecificDemands(Customer.Unit__r.Tower__r.Name,
                Customer.Unit__r.Project__r.Name,
                Customer.Name,
                Customer.Unit__r.Name,null,
                null, null, null, forMilestone);                
             System.debug('customerDemandWrapperMap :::: ' + customerDemandWrapperMap);
             dwList = customerDemandWrapperMap.get(previewId);
             System.debug('dwList:::: ' + dwList);
            if(dwList != null && !dwList.isEmpty()){ 
            for (DemandManagementServices.DemandWrapper d1: dwList) {
                System.debug('dwList in demandView:' + d1);
                sgstGT += d1.ptw.overallTax1D;
                cgstGT += d1.ptw.overallTax2D;
                TDSGT += d1.ptw.overallTDSD;
                AmountGT += d1.ptw.overallAmtD;
                invoiceDate = d1.pm.Invoice_Date__c.format();
             }
            }
            sgstGTStr = InventoryCostServices.InFormat(sgstGT);
            cgstGTStr = InventoryCostServices.InFormat(cgstGT);
            TDSGTStr = InventoryCostServices.InFormat(TDSGT);
            system.debug('TDSGTStr::: '+TDSGTStr);
            AmountGTStr = InventoryCostServices.InFormat(AmountGT);
            
            ////////////// Added by Vikas for previous Dues  //////////////////////
            dwPreviousDuesList = DemandManagementServices.getAllPreviousDemand(Customer.Unit__c);
             

            Booking__c Booking = [Select Id, Quotation__C, Quotation__r.Name,
                Quotation__r.Total_Agreement_Value_Bucket__c,Booking_Date__c,
                Quotation__r.SGST_on_Total_Agreement_Value_Bucket__c,OwnerId,
                Quotation__r.CGST_on_Total_Agreement_Value_Bucket__c
                from Booking__c where Opportunity__c =: Customer.Id and Unit__c =: Customer.Unit__c
            ];

            if (Booking != null) {
                CV = Booking.Quotation__r.Total_Agreement_Value_Bucket__c;
                decimal tdsdueAmt = 0;
                if(CV > 5000000){
                    isTds = 'table-data';
                    TDSDue = InventoryCostServices.InFormat((CV * 1)/100);
                    tdsdueAmt = ((CV * 1)/100).setscale(0,RoundingMode.HALF_UP);
                }else{
                    TDSDue = InventoryCostServices.InFormat(0);
                }
                TaxOnCV = Booking.Quotation__r.SGST_on_Total_Agreement_Value_Bucket__c + Booking.Quotation__r.CGST_on_Total_Agreement_Value_Bucket__c;
                CVStr = InventoryCostServices.InFormat(CV);
                TaxOnCVStr = InventoryCostServices.InFormat(TaxOnCV);
                bookingDate = Booking.Booking_Date__c.format();
                
                User rmDetails = GetUser(Booking.OwnerId);
                if(rmDetails != null){
                        RMName = rmDetails.Name;
                        RMEmail = rmDetails.Email;
                        RMMobile = rmDetails.MobilePhone;
                        RMPhone = rmDetails.Phone;
                }
                List <receipt__c> TDSReceipt = new List <receipt__c>(); 
                decimal tdsrecAmt = 0;
                TDSReceipt = [select id,name,Booking__c,Project__c,Mode__c,Total_Amount__c from receipt__c where Mode__c = 'TDS' and Booking__c =: Booking.id and Opportunity__c =: Customer.id];
                if(TDSReceipt != null && !TDSReceipt.isEmpty()){
                    for(Receipt__c rec : TDSReceipt){
                        tdsrecAmt += rec.Total_Amount__c; 
                    }
                }
                TDSReceived = InventoryCostServices.InFormat(tdsrecAmt);
                tdsrecAmt = tdsrecAmt.setscale(0,RoundingMode.HALF_UP);
                TDSOutstanding = InventoryCostServices.InFormat(tdsdueAmt - tdsrecAmt);
                
            }
            Map < String, Decimal > currentOutstandingsMap = DemandManagementServices.getCurrentOutstanding(Customer.Id, Customer.Unit__c);
            if (currentOutstandingsMap != null && !currentOutstandingsMap.isEmpty() && currentOutstandingsMap.size() > 0) {
                CVDemandedStr = InventoryCostServices.InFormat(currentOutstandingsMap.get('CV Demanded'));
                CVPaidStr = InventoryCostServices.InFormat(currentOutstandingsMap.get('CV Paid'));
                CVBalanceStr = InventoryCostServices.InFormat(currentOutstandingsMap.get('CV Balance'));
                CVTaxPaidStr = InventoryCostServices.InFormat(currentOutstandingsMap.get('CV Tax Paid'));
            }
            totalTaxDue = sgstGT + cgstGT;
            totalTaxDueStr = InventoryCostServices.InFormat(totalTaxDue);
            system.debug('totalTaxDueStr:: '+totalTaxDueStr);
            system.debug('AmountGT:: '+AmountGT);
            system.debug('CV Balance:: '+currentOutstandingsMap.get('CV Balance'));
            if(CV > 5000000){
                totalInstallmentPayable = currentOutstandingsMap.get('CV Balance') + AmountGT - TDSGT;
            }else{
                totalInstallmentPayable = currentOutstandingsMap.get('CV Balance') + AmountGT;
            }
            totalInstallmentPayableStr = InventoryCostServices.InFormat(totalInstallmentPayable);
            TotalDue = totalTaxDue + totalInstallmentPayable;
            TotalDueStr = InventoryCostServices.InFormat(TotalDue);
            //system.debug('TotalDue::: '+TotalDue);
            Decimal amttoWord = TotalDue.setscale(0,RoundingMode.HALF_UP);
            totalAmtInWords = S_NumberToWord.convertNumbertoWords(amttoWord);
        }
    }
    
    public User GetUser(id uId){
        User uObj = new User();
        if(uId != null){
               uObj = [select id,Name,Email,MobilePhone,Phone from User where id =: uId];
        }
        
        return uObj;
    }
    
  /*  public static Legal_Entity__c getLegalEntityDetails(Id unitId, Id pId) {
        Legal_Entity__c le = new Legal_Entity__c();
        Id leId = null;
        List<Unit__c> pu = [Select Id, Name, Legal_Entity__r.Id from Unit__c where Id = : unitId];
        if(pu != null && pu.size() > 0) {
            leId =pu[0].Legal_Entity__r.Id; 
        }
        
        if(leId == null) {
            List<Project__c> p = [Select Id, Name, RDS_Company_Code__r.Id from Project__c where Id = : pId];
            if(p != null && p.size() > 0)
                leId = p[0].RDS_Company_Code__r.Id;
        }
        System.debug('ledId:' + leId);
        if(leId != null) {
            le = [Select Name,Account_Name_Flat_Cost__c, Account_Number_Flat_Cost__c, Bank_Name_Flat_Cost__c, 
                                        IFSC_Code_Flat_Cost__c, MICR_Code_Flat_Cost__c,RDS_PAN_No__c,
                                        Account_Name_Service_Tax__c,Account_Number_Service_tax__c, Bank_Name_Service_tax__c, 
                                        IFSC_Code_Service_Tax__c, MICR_Code_Service_Tax__c, RDS_Service_Tax_No__c,
                                        RDS_Address1__c,RDS_Address2__c, RDS_City__c, RDS_Pin_Code__c, CIN__c
                                        FROM Legal_Entity__c where Id = : leId];
        }
        return le;
    }*/
    
    //starts here dummy method
    public static void hack() {
        Integer i = 0;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        
    }
    public static void hack1() {
        Integer i = 0;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        }

}